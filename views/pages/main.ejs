<!DOCTYPE html>
<html>
<head>
  <title>Data Transformer</title>
  <link rel="stylesheet" href="https://unpkg.com/chota">
  <% include ../partials/header.ejs %>
</head>
  <body>

    <div class="navPanel" style="background-color: var(--color-darkGrey);">
      <div class="homeDiv">
            <a href="/webServer" class="button primary">Login</a>
           <div id="loggedInInfo" style="color:white">
           </div>
      </div>
    </div>

     <form method="post" action="/" enctype="multipart/form-data" id="csvUploadForm">
      <div style="margin:0.5% 3%">
        <div class="row" id="rowDiv">
          <div class="col-4">
              <div class="mainCard card">
                <header>
                  <div class="row">
                    <div class="col-10">
                      <h4>Data Extraction / File Upload</h4>
                      Object Name
                      <input type="text" name="objectName" id="objectName"/>
                    </div>
                    <div class="col-2 text-right">
                      <img src="https://icongr.am/entypo/download.svg?size=128&color=3CAEA3" class="imgIcon"/>
                    </div>
                  </div>
                </header>
                <p>
                  Upload the CSV for Analysis here and click 'Analyze'
                </p>
                <footer class="is-right">
                  <input type="file" name="csvFile" accept=".csv" id="csvFile"></input>
                </footer>
                <footer class="is-right">
                  <button type="submit" class="button primary" id="analyzeBtn" onclick="return checkFile();">Analyze</button>
                </footer>
                <p>
                  Or, Provide the Query here, to extract using Bulk API
                  <div>
                    <textarea name="queryText" rows="3" cols="30" id="queryText"></textarea>
                  </div>
                </p>
                <footer class="is-right">
                  <button type="submit" class="button primary" id="extractBtn" onclick="return checkQuery()" disabled>Extract</button>
                </footer>
              </div>
              
          </div>
          <div class="col-5">
              <div class="mainCard card">
                <header>
                  <div class="row">
                    <div class="col-10">
                      <h4>Data Transformation</h4>
                    </div>
                    <div class="col-2 text-right">
                      <img src="https://icongr.am/entypo/cog.svg?size=128&color=20639B" class="imgIcon"/>
                    </div>
                  </div>
                </header>
                <p>
                  <div>
                    Select the Transformation mode for each column. Only non blank values are jumbled up or randomized. Future and past are with respect to the existing values in the fields.
                    <br/>
                    <div style="color:red">Be careful in selecting the mode</div>
                  </div>
                  <br/>
                  <div id="csvAnalysis" style="font-weight: bold;">
                    Waiting for Data Extraction / File Upload...
                  </div>
                </p>
                <footer class="is-right">
                  <button type="button" class="button primary" id="transformBtn" onclick="on();transform()" disabled>Transform</button>
                </footer>
              </div>
          </div>
          <div class="col-3">
              <div class="mainCard card">
                <header>
                  <div class="row">
                    <div class="col-10">
                      <h4>Output</h4>
                    </div>
                    <div class="col-2 text-right">
                      <img src="https://icongr.am/entypo/upload-to-cloud.svg?size=128&color=fcc003" class="imgIcon"/>
                    </div>
                  </div>
                </header>
                <p>
                 <div id="fileDownload">
                    Transformed File Link will appear Here for Download
                 </div>
                </p>
                <footer class="is-right" id="downloadFooter">
                 
                </footer>
                <p>
                  <div id="uploadedJobDiv">
                    Or, Upload back using Bulk API
                  <br/>
                  <br/>
                  Operation Type
                  <select name="operationType" id="operationType" onchange="validateSelection()" disabled>
                    <option name="update" value="update">update</option>
                    <option name="insert" value="insert">insert</option>
                    <option name="upsert" value="upsert">upsert</option>
                    <option name="delete" value="delete">delete</option>
                    <option name="harddelete" value="hardDelete">harddelete</option>
                  </select>
                  <br/>
                  <br/>
                  <div id="extIdFieldDiv" style="display: none;">
                    External Id Field Name
                    <input type="text" name="extIdField" id="extIdField"/>
                  </div>
                  </div>
                </p>
                <footer class="is-right">
                  <button type="button" class="button primary" id="uploadBtn" onclick="uploadSF()" disabled>Upload to Salesforce</button>
                </footer>
              </div>
              
          </div>
        </div>
        <hr/>
        <h4>INGEST JOBS</h4>
        <div class="row">
            <div class="col-4">
              <div class="mainCard card">
                <header>
                  <div class="row">
                    <div class="col-10">
                      <h4>Extract Failed Results for Job</h4>
                      Enter Job Id
                      <input type="text" id="jobIdInput"/>
                    </div>
                    <div class="col-2 text-right">
                      <img src="https://icongr.am/entypo/warning.svg?size=128&color=d43939" class="imgIcon"/>
                    </div>
                  </div>
                </header>
                <footer class="is-right">
                  <button type="button" class="button primary" id="resultBtn" onclick="return fetchFailedResults();" disabled>Fetch</button>
                </footer>
                 <footer>
                  <p>
                    <div id="failedResultDiv">
                    </div>
                  </p>
                </footer>
              </div>
            </div>
            <div class="col-5">
              <div class="mainCard card">
                <header>
                  <div class="row">
                    <div class="col-10">
                      <h4>Extract Successful Results for Job</h4>
                      Enter Job Id
                      <input type="text" id="jobIdInputSuccess"/>
                    </div>
                    <div class="col-2 text-right">
                      <img src="https://icongr.am/entypo/check.svg?size=128&color=14854f" class="imgIcon"/>
                    </div>
                  </div>
                </header>
                <footer class="is-right">
                  <button type="button" class="button primary" id="successResultBtn" onclick="return fetchSuccessfulResults();" disabled>Fetch</button>
                </footer>
                <footer>
                  <p>
                    <div id="successfulResultDiv">
                    </div>
                  </p>
                </footer>
              </div>
            </div>
            <div class="col-3">
              <div class="mainCard card">
                <header>
                  <div class="row">
                    <div class="col-10">
                      <h4>Fetch Job Status</h4>
                      Enter Job Id
                      <input type="text" id="jobIdIputResults"/>
                    </div>
                    <div class="col-2 text-right">
                      <img src="https://icongr.am/entypo/progress-two.svg?size=128&color=FF6600" class="imgIcon"/>
                    </div>
                  </div>
                </header>
                <footer class="is-right">
                  <button type="button" class="button primary" id="statusBtn" onclick="return fetchJobStatus();" disabled>Get Status</button>
                </footer>
                <footer>
                  <p>
                    <div id="jobStatusResultDiv">
                    </div>
                  </p>
                </footer>
              </div>
            </div>
          </div>
          <hr/>
          <h4>QUERY JOBS</h4>
        <div class="row">
            <div class="col-4">
              
            </div>
            <div class="col-5">
              <div class="mainCard card">
                <header>
                  <div class="row">
                    <div class="col-10">
                      <h4>Extract Results for Query Job</h4>
                      Enter Job Id
                      <input type="text" id="jobIdInputQuery"/>
                      <br/>
                      Enter SForce Locator
                      <input type="text" id="sforceLocatorInputQuery"/>
                    </div>
                    <div class="col-2 text-right">
                      <img src="https://icongr.am/entypo/check.svg?size=128&color=14854f" class="imgIcon"/>
                    </div>
                  </div>
                </header>
                <footer class="is-right">
                  <button type="button" class="button primary" id="successQueryResultBtn" onclick="return fetchQueryResults();" disabled>Extract</button>
                </footer>
                <footer>
                  <p>
                    <div id="queryResultDiv">
                    </div>
                  </p>
                </footer>
              </div>
            </div>
            <div class="col-3">
              <div class="mainCard card">
                <header>
                  <div class="row">
                    <div class="col-10">
                      <h4>Fetch Query Job Status</h4>
                      Enter Job Id
                      <input type="text" id="jobIdIputQueryResults"/>
                    </div>
                    <div class="col-2 text-right">
                      <img src="https://icongr.am/entypo/progress-two.svg?size=128&color=FF6600" class="imgIcon"/>
                    </div>
                  </div>
                </header>
                <footer class="is-right">
                  <button type="button" class="button primary" id="queryStatusBtn" onclick="return fetchQueryJobStatus();" disabled>Get Status</button>
                </footer>
                <footer>
                  <p>
                    <div id="jobStatusQueryResultDiv">
                    </div>
                  </p>
                </footer>
              </div>
            </div>
          </div>
      </div>
    </form>
    <div id="overlay">
      <div class="loader"></div>
    </div>
</body>

<script>

    off();
    var headerData = <%- JSON.stringify(headerData) %>;
    var headerDataJSON = JSON.parse(headerData);

    var actions = ['No Change', 'Jumble Up Text', 'Jumble Up Numbers', 'Jumble Up Email', 'Random Phone', 'Random Past Date', 'Random Future Date', 'Random Past Date Time','Exclude', '#NA']; 
    
    var actionSelect = document.createElement('select');
    actions.forEach(function(item, index){

      var optionElement = document.createElement("option");
      optionElement.value = item;
      optionElement.text = item;
      actionSelect.appendChild(optionElement);

    });

    if(headerDataJSON.instanceInfo){
      document.getElementById("loggedInInfo").innerHTML = "Logged into the Org " + headerDataJSON.instanceInfo;
      // Enable Extract Button
      document.getElementById("extractBtn").disabled = false;
      document.getElementById("statusBtn").disabled = false;
      document.getElementById("resultBtn").disabled = false;
      document.getElementById("successResultBtn").disabled = false;
      document.getElementById("queryStatusBtn").disabled = false;
      document.getElementById("successQueryResultBtn").disabled = false;

    }

    if(headerDataJSON.headers && headerDataJSON.headers.length > 0){

      headersDiv = document.getElementById("csvAnalysis");
      removeAllChildren(headersDiv);

      var rowsDiv = document.createElement("div");
      rowsDiv.innerHTML = "Number of Rows - "+headerDataJSON.rowCount;
      rowsDiv.className = "titleDiv";

      headersDiv.appendChild(rowsDiv);

      headerDataJSON.headers.forEach(function(header, index){

        var hdrDiv = document.createElement("div");
        hdrDiv.className = "row";
      
        var hdrRowCol = document.createElement("div");
        hdrRowCol.className = "col-6";

          var hdrCol = document.createElement("div");
          hdrCol.innerHTML = header;
        
        hdrRowCol.appendChild(hdrCol);
        hdrDiv.appendChild(hdrRowCol);

        hdrRowCol = document.createElement("div");
        hdrRowCol.className = "col-6";

          var itemCombo = actionSelect.cloneNode(true);
          itemCombo.name = header;
          itemCombo.id = header;
          itemCombo.className = "actionItem";
          
        hdrRowCol.appendChild(itemCombo);
        hdrDiv.appendChild(hdrRowCol);

        headersDiv.appendChild(hdrDiv);

      });

      document.getElementById("analyzeBtn").disabled = true;
      document.getElementById("extractBtn").disabled = true;
      document.getElementById("transformBtn").disabled = false;

    }

    function validateSelection(){
      var txt = document.getElementById("operationType").value;
      var extField = document.getElementById("extIdFieldDiv");
      
      if(txt == 'upsert'){
        extField.style.display = 'block';
      }
      else{
        extField.style.display = 'none';
      }
    }

    function fetchQueryResults(){

      let jobId = document.getElementById("jobIdInputQuery").value;
      let locator = document.getElementById("sforceLocatorInputQuery").value;
      if(jobId != ""){
        on();
        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/fetchQueryResults", true);
        xhttp.setRequestHeader('Content-Type', 'application/json');
        xhttp.onreadystatechange = function() {

            if (this.readyState == 4 && this.status == 200) {
              
              console.log(this.response);
              footerDiv = document.getElementById("queryResultDiv");
              removeAllChildren(footerDiv);

              var linkDwn = document.createElement("a");
              linkDwn.innerHTML = "Download Query Results";
              linkDwn.href = "/downloadQueriedFile";
              linkDwn.id = "downloadQueryBtn";
              linkDwn.className = "button primary";
              footerDiv.appendChild(linkDwn);

              off();
            }
        }
        xhttp.send(JSON.stringify({ jobId: jobId, locator:  locator}));        
      }
      else{
        alert('Please enter a Valid Job Id');
        return false;
      } 

    }

    function fetchQueryJobStatus(){

      let jobId = document.getElementById("jobIdIputQueryResults").value;
      if(jobId != ""){
        on();
        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/fetchQueryJobStatus", true);
        xhttp.setRequestHeader('Content-Type', 'application/json');
        xhttp.onreadystatechange = function() {

            if (this.readyState == 4 && this.status == 200) {
              
              console.log(this.response);
              var jsonResponse = JSON.parse(this.response);
              off();
              if(jsonResponse.status == 'success'){

                var innerHTML = "Job Status : "+ jsonResponse.response.state+
                "<br/>"+"Number of records Processed : "+jsonResponse.response.numberRecordsProcessed +
                "<br/>"+"Number of records Failed : "+jsonResponse.response.numberRecordsFailed;

                if(jsonResponse.response.errorMessage){
                  innerHTML += "<br/>"+"Error Message : "+jsonResponse.response.errorMessage;
                }

                document.getElementById("jobStatusQueryResultDiv").innerHTML = innerHTML;

              }
              else{
                alert('Error'+ jsonResponse.error);
              }
              
            }
        }
        xhttp.send(JSON.stringify({ jobId: jobId }));        
      }
      else{
        alert('Please enter a Valid Job Id');
        return false;
      }

    }

    function fetchJobStatus(){

      let jobId = document.getElementById("jobIdIputResults").value;
      if(jobId != ""){
        on();
        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/fetchJobStatus", true);
        xhttp.setRequestHeader('Content-Type', 'application/json');
        xhttp.onreadystatechange = function() {

            if (this.readyState == 4 && this.status == 200) {
              
              console.log(this.response);
              var jsonResponse = JSON.parse(this.response);
              off();
              if(jsonResponse.status == 'success'){

                var innerHTML = "Job Status : "+ jsonResponse.response.state+
                "<br/>"+"Number of records Processed : "+jsonResponse.response.numberRecordsProcessed +
                "<br/>"+"Number of records Failed : "+jsonResponse.response.numberRecordsFailed;

                if(jsonResponse.response.errorMessage){
                  innerHTML += "<br/>"+"Error Message : "+jsonResponse.response.errorMessage;
                }


                document.getElementById("jobStatusResultDiv").innerHTML = innerHTML;
              }
              else{
                alert('Error'+ jsonResponse.error);
              }
              
            }
        }
        xhttp.send(JSON.stringify({ jobId: jobId }));        
      }
      else{
        alert('Please enter a Valid Job Id');
        return false;
      }

    }

    function fetchFailedResults(){
      let jobId = document.getElementById("jobIdInput").value;
      if(jobId != ""){
        on();
        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/fetchFailedResults", true);
        xhttp.setRequestHeader('Content-Type', 'application/json');
        xhttp.onreadystatechange = function() {

            if (this.readyState == 4 && this.status == 200) {
              
              console.log(this.response);
              footerDiv = document.getElementById("failedResultDiv");
              removeAllChildren(footerDiv);

              var linkDwn = document.createElement("a");
              linkDwn.innerHTML = "Download Failed Results";
              linkDwn.href = "/downloadFailedFile";
              linkDwn.id = "downloadFailedBtn";
              linkDwn.className = "button primary";

              footerDiv.appendChild(linkDwn);

              //document.getElementById("fileDownload").innerHTML = "The Failed Results File is now available for Download.";
              off();
              // Provide Download Link
              //pollJobStatus(jobId)
            }
        }
        xhttp.send(JSON.stringify({ jobId: jobId }));        
      }
      else{
        alert('Please enter a Valid Job Id');
        return false;
      }
    }

    function fetchSuccessfulResults(){
      let jobId = document.getElementById("jobIdInputSuccess").value;
      if(jobId != ""){
        on();
        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/fetchSuccessfulResults", true);
        xhttp.setRequestHeader('Content-Type', 'application/json');
        xhttp.onreadystatechange = function() {

            if (this.readyState == 4 && this.status == 200) {
              
              console.log(this.response);
              footerDiv = document.getElementById("successfulResultDiv");
              removeAllChildren(footerDiv);

              var linkDwn = document.createElement("a");
              linkDwn.innerHTML = "Download Successful Results";
              linkDwn.href = "/downloadSuccessfulFile";
              linkDwn.id = "downloadSuccessfulBtn";
              linkDwn.className = "button primary";
              footerDiv.appendChild(linkDwn);
              off();
            }
        }
        xhttp.send(JSON.stringify({ jobId: jobId }));        
      }
      else{
        alert('Please enter a Valid Job Id');
        return false;
      }
    }


    function uploadSF(){

      let opType = document.getElementById("operationType").value;
      var extField = document.getElementById("extIdField").value;
     
      if(opType == 'upsert' && (!extField || extField == '')){
        alert('Please add an External Id Field for Upsert');
        return false;
      }

      on();
      var xhttp = new XMLHttpRequest();
      xhttp.open("POST", "/uploadSF", true);
      xhttp.setRequestHeader('Content-Type', 'application/json');
      xhttp.onreadystatechange = function() {

          if (this.readyState == 4 && this.status == 200) {
            off();
            
            console.log(this.response);
            var jsonResponse = JSON.parse(this.response);

            var upDiv = document.getElementById("uploadedJobDiv");
            if(jsonResponse.status == 'success'){

              upDiv.innerHTML = "The Upload Job has been submitted to Salesforce with Job Id "+jsonResponse.jobId;
              document.getElementById("fileDownload").innerHTML = "The file has now been removed from local filesystem";
            }
            else{
              upDiv.innerHTML = "The Job could not be submitted. Error - "+ jsonResponse.error.message; 
            }

            document.getElementById("uploadBtn").disabled = true;
            
            var elem = document.getElementById("downloadBtn");
            elem.parentNode.removeChild(elem);

          }
      }

      
      xhttp.send(JSON.stringify({operationType : opType, 'externalIdField' : extField}));

    }

    function transform(){

      var xhttp = new XMLHttpRequest();
      xhttp.open("POST", "/transformFile", true);
      xhttp.setRequestHeader('Content-Type', 'application/json');
      xhttp.onreadystatechange = function() {

          if (this.readyState == 4 && this.status == 200) {

            console.log(this.response);
            var jsonResponse = JSON.parse(this.response);

            footerDiv = document.getElementById("downloadFooter");
            removeAllChildren(footerDiv);

            var linkDwn = document.createElement("a");
            linkDwn.innerHTML = "Download";
            linkDwn.href = "/downloadFile";
            linkDwn.id = "downloadBtn";
            linkDwn.className = "button primary";

            footerDiv.appendChild(linkDwn);

            document.getElementById("fileDownload").innerHTML = "Transformed File is now available for Download.";
            document.getElementById("transformBtn").disabled = true;
            document.getElementById("uploadBtn").disabled = false;
            document.getElementById("operationType").disabled = false;
            
            off();

          }
      }
      
      let allActions = document.getElementsByClassName('actionItem');
      var data = {};
      [...allActions].forEach(function(element){
        data[element.name] = element.value;
      });
      xhttp.send(JSON.stringify({ data: data }));
      
    }

    function removeAllChildren(parent){
        while (parent.firstChild) {
            parent.removeChild(parent.firstChild);
        }
    }

    function on() {
      document.getElementById("overlay").style.display = "block";
    }

    function off() {
      document.getElementById("overlay").style.display = "none";
    }

    function checkFile(){
      var files = document.getElementById("csvFile").files;
      var objName = document.getElementById("objectName").value;
      if(files && files.length > 0 && objName != ''){
        on();
        return true;
      }
      alert('Please select a File and add an Object Name');
      return false;
    }

    function checkQuery(){
      var txt = document.getElementById("queryText").value;
      var objName = document.getElementById("objectName").value;
      if(txt != '' && objName != ''){
        on();
        return true;
      }
      alert('Please enter a query and an Object Name');
      return false;
    }
    

</script>

</html>